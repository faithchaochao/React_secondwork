{"version":3,"sources":["myreact/Header.js","myreact/Home.js","myreact/router.config.js","myreact/Doc.js","myreact/Core.js","myreact/Guide.js","myreact/Api.js","myreact/Hooks.js","myreact/Tuto.js","myreact/Blog.js","myreact/Comm.js","myreact/Login.js","myreact/App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","style","textAlign","onClick","history","push","routes","path","component","withRouter","console","log","className","map","route","i","RouteWithSubRoutes","key","from","pri","localStorage","setItem","replace","location","state","PrivateRoute","Com","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"yLAkBeA,G,MAdA,WACX,OACI,gCACI,6BACI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,QAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,oBCMDC,EAhBF,SAACC,GACV,OAEI,yBAAKC,MAAO,CAACC,UAAU,WACnB,qCACA,gGACA,6BACA,4BAAQC,QAAS,kBAAIH,EAAMI,QAAQC,KAAK,UAAxC,4BACA,4BAAQF,QAAS,kBAAIH,EAAMI,QAAQC,KAAK,WAAxC,+BCsDGC,G,cAtDA,CACX,CACIC,KAAK,IACLV,OAAM,EACNW,UAAUT,GAEd,CACIQ,KAAK,OACLC,UCuBOC,aA3BH,SAACH,GAGT,OAFAI,QAAQC,IAAIL,GAGR,yBAAKM,UAAU,OACX,yBAAKA,UAAU,WAIPN,EAAOA,OAAOO,KAAI,SAACC,EAAMC,GAAP,OACd,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,OAIxC,kBAAC,IAAD,CAAUI,KAAK,OAAOpB,GAAG,eAE7B,4BACI,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,eDfZqB,KAAI,EACJb,OAAS,CACL,CACIC,KAAO,YACPC,UErBH,WACZ,OAAO,uCFuBI,CACID,KAAO,aACPC,UG1BF,WACb,OAAO,wCH4BI,CACID,KAAO,WACPC,UI/BJ,WACX,OAAO,sCJiCI,CACID,KAAO,aACPC,UKpCF,WACb,OAAO,0CL0CJ,CACID,KAAK,QACLC,UM7CK,WACT,OACI,sCN4CAW,KAAI,GAER,CACIZ,KAAK,QACLC,UOlDK,WACT,OACI,uCPkDJ,CACID,KAAK,QACLC,UQtDK,WACT,OACI,uCRsDJ,CACID,KAAK,SACLC,USzDM,SAACR,GAOX,OACI,6BACI,4BAAQG,QARF,WACViB,aAAaC,QAAQ,WAAW,OAChCrB,EAAMI,QAAQkB,QAAQtB,EAAMuB,SAASC,OACrCd,QAAQC,IAAIX,KAKR,qBCPZ,SAASyB,EAAT,GAAoD,IAAjBC,EAAgB,EAA3BlB,UAAmBmB,EAAQ,6BAClD,OACC,kBAAC,IAAD,iBACMA,EADN,CAECC,OAAS,gBAAGL,EAAH,EAAGA,SAAH,OACRH,aAAaS,QAAQ,YAClB,kBAACH,EAAQC,GAEV,kBAAC,IAAD,CACC7B,GAAK,CACJgC,SAAU,SACVN,MAAOD,SASR,SAASP,EAAmBV,GAClC,OAAGA,EAAOa,IACF,kBAACM,EAAiBnB,GAIzB,kBAAC,IAAD,CACEC,KAAMD,EAAOC,KACbqB,OAAQ,SAAA5B,GAAK,OACd,kBAACM,EAAOE,UAAR,iBAAsBR,EAAtB,CAA6BM,OAAQA,EAAOA,aAM/C,IAceyB,EAdH,WACX,OAAO,kBAAC,IAAD,KAEN,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEGzB,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACJ,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,UCxC5CkB,IAASJ,OACL,kBAAC,EAAD,MACAK,SAASC,eAAe,U","file":"static/js/main.51a3a056.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        \r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript</p>\r\n            <div>\r\n            <button onClick={()=>props.history.push('/doc')}>快速开始</button>\r\n            <button onClick={()=>props.history.push('/tuto')}>入门教程</button>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from './Home';\r\nimport Doc from './Doc';\r\nimport Tuto from './Tuto';\r\nimport Blog from './Blog';\r\nimport Comm from './Comm';\r\nimport Login from './Login';\r\nimport Core from './Core';\r\nimport Guide from './Guide';\r\nimport Api from './Api';\r\nimport Hooks from './Hooks';\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes : [\r\n            {               \r\n                path : '/doc/core',\r\n                component : Core\r\n\r\n            },\r\n            {               \r\n                path : '/doc/guide',\r\n                component : Guide\r\n\r\n            },\r\n            {               \r\n                path : '/doc/api',\r\n                component : Api\r\n\r\n            },\r\n            {               \r\n                path : '/doc/hooks',\r\n                component : Hooks\r\n\r\n            },\r\n\r\n        ]\r\n        \r\n    },\r\n    {\r\n        path:'/tuto',        \r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',        \r\n        component:Blog\r\n    },\r\n    {\r\n        path:'/comm',       \r\n        component:Comm\r\n    },\r\n    {\r\n        path:'/login',       \r\n        component:Login\r\n    },\r\n]\r\n\r\nexport default routes","import { Switch } from 'antd-mobile';\r\nimport React, { Component } from 'react'\r\nimport {BrowserRouter as Router,NavLink,Route,Redirect,withRouter} from 'react-router-dom'\r\nimport './doc.css'\r\nimport routes from './router.config';\r\nimport {RouteWithSubRoutes} from './App';\r\n// const DocContent = (props)=>{\r\n//     return <h1>\r\n//         {props.match.params.type}\r\n//     </h1>\r\n// }\r\n\r\n\r\n\r\nconst Doc = (routes) => {\r\n    console.log(routes);\r\n\r\n    return (\r\n        <div className='doc'>\r\n            <div className='content'>\r\n                {/* 嵌套路由 */}\r\n                {/* <Route path='/doc/:type' component={DocContent}/>  */}\r\n                {\r\n                    routes.routes.map((route,i) =>(\r\n                        <RouteWithSubRoutes key={i} {...route} />\r\n                    ))\r\n                    \r\n                }\r\n                <Redirect from='/doc' to='/doc/core'/>\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'  >核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide' >高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'   >API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks' >Hooks</NavLink></li>\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);\r\n","import React from 'react'\r\n\r\nconst Core = () => {\r\n\treturn <div>\r\n        core\r\n    </div>\r\n}\r\n\r\nexport default Core;\r\n","import React from 'react'\r\n\r\nconst Guide = () => {\r\n\treturn <div>\r\n        guide\r\n    </div>\r\n}\r\n\r\nexport default Guide;\r\n","import React from 'react'\r\n\r\nconst Api = () => {\r\n\treturn <div>\r\n        api\r\n    </div>\r\n}\r\n\r\nexport default Api;\r\n","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n\treturn <div>\r\n        hooks\r\n    </div>\r\n}\r\n\r\nexport default Hooks;\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto\r\n\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm\r\n","import React from 'react'\r\n\r\n\r\nconst Login = (props) => {\r\n    const login = () =>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n        console.log(props);\r\n    \r\n    }\r\n    return (\r\n        <div >\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport Header from './Header';\r\nimport routes from './router.config';\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{ ...rest }\r\n\t\t\trender={ ({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={ {\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport function RouteWithSubRoutes(routes) {\r\n\tif(routes.pri){\r\n\t\treturn <PrivateRoute {...routes}/>\r\n        \r\n\t}\r\n\treturn (\r\n\t\t<Route\r\n\t\t  path={routes.path}\r\n\t\t  render={props => (\r\n\t\t\t<routes.component {...props} routes={routes.routes} />\r\n\t\t  )}\r\n\t\t/>\r\n\t  );\r\n}\r\n\r\nconst App = () => {\r\n\treturn <Router>\r\n\t\t\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t{\r\n\t\t   routes.map((route, i) => (\r\n            <RouteWithSubRoutes key={i} {...route} />\r\n           ))\r\n\t\t}\r\n\t\t</Switch>\r\n\t</Router>\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//ctrl+shift+L 选中所有被选中的单词，进行删改\r\nimport App from './myreact/App'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n                //let ele = < h1 id = \"title\" className = 'tit><div> hello</div> react </h1>\r\n                //let ele = React.createElement('h1',{id:'title'},'hello react');'><\r\n                // let ele = {\r\n                //         /* <h1 id = 'title' className = 'tit' >\r\n\r\n                //             <div> 当前时间 </div> { new Date().toLocaleString() },\r\n\r\n                //             </h1>;     */\r\n                //     }\r\n                //组件声明\r\n                //     //函数组件\r\n                //     //UI组件\r\n                // function App(props) {\r\n                //     const { title, id } = props;\r\n                //     return <div >\r\n                //         <h1 > APP组件内容 </h1> \r\n                //         <div > { props.title } </div>\r\n                //         <div > hello </div> \r\n                //         </div>\r\n                // }\r\n                //智能组件\r\n                // class Demo extends React.Component {\r\n                //     constructor() {\r\n                //         super();\r\n                //         //声明状态\r\n                //         this.state = {\r\n                //             name: 'tom'\r\n                //         }\r\n                //         setTimeout(() => {\r\n                //             this.setState({ name: 'jerry' })\r\n                //         }, 3000)\r\n                //     }\r\n                //     render() {\r\n                //         return <div>\r\n                //             <div > name: { this.state.name } </div> \r\n                //             <App title:{this.state.title}  id = 'app'/>\r\n                //             <App title = '任意值' id = 'app' / >\r\n                //             <App title = '任意值' id = 'app' / >\r\n                //         </div>;\r\n                //     }\r\n\r\n                // }\r\n\r\n                // let ReactDOM = {\r\n                //     render(eleobj, container) {\r\n                //         //解构\r\n                //         const { type, props } = elebobj;\r\n                //         //创建第一层节点\r\n                //         let ele = document.createElement(type)\r\n                //             //将第一层节点添加到容器中\r\n                //         container.appendChild(ele);\r\n                //         //遍历属性对象，将属性添加到第一层节点对象上\r\n                //         for (const prop in props) {\r\n                //             if (prop == 'children') {\r\n                //                 if(props.children == 'string'){\r\n                //                     const txtNode = document.createTextNode(props.children);\r\n                //                     ele.appendChild(txtNode);\r\n                //                     break;\r\n                //                 }\r\n                //                 //将第一层节点对象的子元素添加进去\r\n                //                 //ele.setAttribute('class',props[prop]);\r\n                //                 //ele[prop]= props[prop];+\r\n                //                 props.children.forEach(child => {\r\n                //                     if (typeof child == 'string') {\r\n                //                         const txtNode = document.createTextNode('child');\r\n                //                         ele.appendChild(txtNode);\r\n                //                     }\r\n                //                     ReactDOM.render(child, ele);\r\n                //                 })\r\n\r\n                //             } else {\r\n                //                 ele[prop] = props[prop];\r\n                //             }\r\n                //         }\r\n\r\n                //     }\r\n                // }"],"sourceRoot":""}